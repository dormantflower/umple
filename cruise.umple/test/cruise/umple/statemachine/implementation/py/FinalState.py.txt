#PLEASE DO NOT EDIT THIS CODE
#This code was generated using the UMPLE 1.32.1.6535.66c005ced modeling language!

from enum import Enum, auto

class Mentor():
    #------------------------
    # MEMBER VARIABLES
    #------------------------
    #Mentor State Machines
    class Status(Enum):
        def _generate_next_value_(name, start, count, last_values):
            return name
        def __str__(self):
            return str(self.value)
        Ok = auto()
        Final = auto()

    #------------------------
    # CONSTRUCTOR
    #------------------------
    def __init__(self):
        self._status = None
        self.setStatus(Mentor.Status.Ok)

    #------------------------
    # INTERFACE
    #------------------------
    def getStatusFullName(self):
        answer = self._status.__str__()
        return answer

    def getStatus(self):
        return self._status

    def flip(self):
        wasEventProcessed = False
        aStatus = self._status
        if aStatus == Mentor.Status.Ok :
            self.setStatus(Mentor.Status.Final)
            wasEventProcessed = True
        else :
            # Other states do respond to this event
            pass
        return wasEventProcessed

    def setStatus(self, aStatus):
        self._status = aStatus
        # entry actions and do activities
        if self._status == Mentor.Status.Final :
            self.delete()

    def delete(self):
        pass

