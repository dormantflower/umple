from enum import Enum, auto

class X():
    class Sm(Enum):
        def _generate_next_value_(name, start, count, last_values):
            return name
        def __str__(self):
            return str(self.value)
        s0 = auto()
        s1 = auto()

    class SmS0T1(Enum):
        def _generate_next_value_(name, start, count, last_values):
            return name
        def __str__(self):
            return str(self.value)
        Null = auto()
        t1 = auto()

    class SmS0T2(Enum):
        def _generate_next_value_(name, start, count, last_values):
            return name
        def __str__(self):
            return str(self.value)
        Null = auto()
        t2 = auto()
        t3 = auto()

    class SmS1T4(Enum):
        def _generate_next_value_(name, start, count, last_values):
            return name
        def __str__(self):
            return str(self.value)
        Null = auto()
        t4 = auto()
        t5 = auto()

    class SmS1T6(Enum):
        def _generate_next_value_(name, start, count, last_values):
            return name
        def __str__(self):
            return str(self.value)
        Null = auto()
        t6 = auto()
        t7 = auto()

    def __init__(self):
        self._smS1T6 = None
        self._smS1T4 = None
        self._smS0T2 = None
        self._smS0T1 = None
        self._sm = None
        self.setSmS0T1(X.SmS0T1.Null)
        self.setSmS0T2(X.SmS0T2.Null)
        self.setSmS1T4(X.SmS1T4.Null)
        self.setSmS1T6(X.SmS1T6.Null)
        self.setSm(X.Sm.s0)

    def getSmFullName(self):
        answer = self._sm.__str__()
        if self._smS0T1 != X.SmS0T1.Null :
            answer += "." + self._smS0T1.__str__()
        if self._smS0T2 != X.SmS0T2.Null :
            answer += "." + self._smS0T2.__str__()
        if self._smS1T4 != X.SmS1T4.Null :
            answer += "." + self._smS1T4.__str__()
        if self._smS1T6 != X.SmS1T6.Null :
            answer += "." + self._smS1T6.__str__()
        return answer

    def getSm(self):
        return self._sm

    def getSmS0T1(self):
        return self._smS0T1

    def getSmS0T2(self):
        return self._smS0T2

    def getSmS1T4(self):
        return self._smS1T4

    def getSmS1T6(self):
        return self._smS1T6

    def goS1(self):
        wasEventProcessed = False
        aSmS0T1 = self._smS0T1
        if aSmS0T1 == X.SmS0T1.t1 :
            self.exitSm()
            self.setSm(X.Sm.s1)
            wasEventProcessed = True
        else :
            pass
        return wasEventProcessed

    def goT3(self):
        wasEventProcessed = False
        aSmS0T2 = self._smS0T2
        if aSmS0T2 == X.SmS0T2.t2 :
            self.exitSmS0T2()
            self.setSmS0T2(X.SmS0T2.t3)
            wasEventProcessed = True
        else :
            pass
        return wasEventProcessed

    def goT5(self):
        wasEventProcessed = False
        aSmS1T4 = self._smS1T4
        if aSmS1T4 == X.SmS1T4.t4 :
            self.exitSmS1T4()
            self.setSmS1T4(X.SmS1T4.t5)
            wasEventProcessed = True
        else :
            pass
        return wasEventProcessed

    def goT7(self):
        wasEventProcessed = False
        aSmS1T6 = self._smS1T6
        if aSmS1T6 == X.SmS1T6.t6 :
            self.exitSmS1T6()
            self.setSmS1T6(X.SmS1T6.t7)
            wasEventProcessed = True
        else :
            pass
        return wasEventProcessed

    def exitSm(self):
        if self._sm == X.Sm.s0 :
            self.exitSmS0T1()
            self.exitSmS0T2()
        elif self._sm == X.Sm.s1 :
            self.exitSmS1T4()
            self.exitSmS1T6()

    def setSm(self, aSm):
        self._sm = aSm
        if self._sm == X.Sm.s0 :
            if self._smS0T1 == X.SmS0T1.Null :
                self.setSmS0T1(X.SmS0T1.t1)
            if self._smS0T2 == X.SmS0T2.Null :
                self.setSmS0T2(X.SmS0T2.t2)
        elif self._sm == X.Sm.s1 :
            if self._smS1T4 == X.SmS1T4.Null :
                self.setSmS1T4(X.SmS1T4.t4)
            if self._smS1T6 == X.SmS1T6.Null :
                self.setSmS1T6(X.SmS1T6.t6)

    def exitSmS0T1(self):
        if self._smS0T1 == X.SmS0T1.t1 :
            self.setSmS0T1(X.SmS0T1.Null)

    def setSmS0T1(self, aSmS0T1):
        self._smS0T1 = aSmS0T1
        if self._sm != X.Sm.s0 and aSmS0T1 != X.SmS0T1.Null :
            self.setSm(X.Sm.s0)

    def exitSmS0T2(self):
        if self._smS0T2 == X.SmS0T2.t2 :
            self.setSmS0T2(X.SmS0T2.Null)
        elif self._smS0T2 == X.SmS0T2.t3 :
            self.setSmS0T2(X.SmS0T2.Null)

    def setSmS0T2(self, aSmS0T2):
        self._smS0T2 = aSmS0T2
        if self._sm != X.Sm.s0 and aSmS0T2 != X.SmS0T2.Null :
            self.setSm(X.Sm.s0)

    def exitSmS1T4(self):
        if self._smS1T4 == X.SmS1T4.t4 :
            self.setSmS1T4(X.SmS1T4.Null)
        elif self._smS1T4 == X.SmS1T4.t5 :
            self.setSmS1T4(X.SmS1T4.Null)

    def setSmS1T4(self, aSmS1T4):
        self._smS1T4 = aSmS1T4
        if self._sm != X.Sm.s1 and aSmS1T4 != X.SmS1T4.Null :
            self.setSm(X.Sm.s1)

    def exitSmS1T6(self):
        if self._smS1T6 == X.SmS1T6.t6 :
            self.setSmS1T6(X.SmS1T6.Null)
        elif self._smS1T6 == X.SmS1T6.t7 :
            self.setSmS1T6(X.SmS1T6.Null)

    def setSmS1T6(self, aSmS1T6):
        self._smS1T6 = aSmS1T6
        if self._sm != X.Sm.s1 and aSmS1T6 != X.SmS1T6.Null :
            self.setSm(X.Sm.s1)

    def delete(self):
        pass