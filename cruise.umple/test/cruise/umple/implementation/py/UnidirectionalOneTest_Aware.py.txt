import os

class Mentor():
    def __init__(self, aName, aStudent):
        self._student = None
        self._name = None
        self._name = aName
        if not self.setStudent(aStudent) :
            raise RuntimeError ("Unable to create Mentor due to aStudent. See http://manual.umple.org?RE002ViolationofAssociationMultiplicity.html")

    def setName(self, aName):
        wasSet = False
        self._name = aName
        wasSet = True
        return wasSet

    def getName(self):
        return self._name

    def getStudent(self):
        return self._student

    def setStudent(self, aNewStudent):
        wasSet = False
        if not (aNewStudent is None) :
            self._student = aNewStudent
            wasSet = True
        return wasSet

    def delete(self):
        self._student = None

    def __str__(self):
        return str(super().__str__()) + "[" + "name" + ":" + str(self.getName()) + "]" + str(os.linesep) + "  " + "student = " + ((format(id(self.getStudent()), "x")) if not (self.getStudent() is None) else "null")

