/*
	Example 1: showing how the operator
	"Removing/keeping provided methods" works.
*/
trait T1{
  abstract method1(); 
  void method2() Java {/*implementation*/}
  void method3() Java {/*implementation*/}
  void method4() Java {/*implementation*/}
  void method5() Java {/*implementation*/}

  void method1() Python { '''implementation''' }
  void method2() Python { '''implementation''' }
  void method3() Python { '''implementation''' }
  void method4() Python { '''implementation''' }
  void method5() Python { '''implementation''' }
}
class C1{
  isA T1<-method2() , -method3()>;
  void method1() Java {/*implementation for C1*/}
  void method1() Python {'''implementation for C1*'''}
}
class C2{
  isA T1<+method5()>;
  void method1() Java {/*implementation for C2*/}
  void method1() Python {'''implementation for C2'''}
}